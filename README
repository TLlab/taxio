Concatenating Illumina paired-end reads for taxonomy classification in metagenomic studies

Tsunglin Liu, An Chen-Deng, Sheng-Jou Hung


1. Installation
--------------------------------------------------------------------------------------------
TaxIO is written in Perl and requires e-PCR, USEARCH and RDP Classifier. 
The codes are ready for use after being downloaded and decompressed as follows.
--------------------------------------------------------------------------------------------

TaxIO installation:
> wget https://github.com/TLlab/taxio/raw/master/taxio-0.1.tar.gz
> tar zxvf taxio-0.1.tar.gz
# add the folder taxio-0.1/bin to $PATH
# see below if reference sequences other than RDP training set is desired

e-PCR installation:
> cd taxio-0.1
> tar zxvf e-PCR-2.3.11-x86_64-linux.tar.gz
# add folder containing the executables to $PATH

RDP classifier installation:
> wget https://downloads.sourceforge.net/project/rdp-classifier/rdp-classifier/rdp_classifier_2.12.zip
> unzip rdp_classifier_2.12.zip

USEARCH installation
# obtain USERACH (v9.2.64) from http://www.drive5.com/usearch/download.html
> chmod 755 usearch9.2.64_i86linux32
> ln -s usearch9.2.64_i86linux32 usearch
# add the folder containing usearch to $PATH


2. Running TaxIO
-------------------------------------------------------------------------------------------
usage  : taxio.pl [options] forward_primer reverse_primer read1_file read2_file

option : -ref   <str> reference sequence file (with fix rank taxonomy)              [rdp_16S_t16.fa]
       : -l1    <int> ioref option: read 1 length                                   [300]
       : -l2    <int> ioref option: read 2 length                                   [300]
       : -pc    <int> ioref option: primer cut                                      [0,1]
       : -taxm  <str> taxonomy classification method                                [utax,rdp]
       : -ma    <int> usearch taxonomy option: maximal accepts for usearch          [128]
       : -mr    <int> usearch taxonomy option: maximal rejects for usearch          [128]
       : -idmin <flt> usearch taxonomy option: minimal identity for usearch         [0.8]
       : -pidd  <flt> usearch taxonomy option: % identity difference from maximum   [0.5]
       : -cpu   <int> number of threads                                             [1]
       : -out   <str> name of output folder                                         [ref_read_taxm]
       : -help        help
-------------------------------------------------------------------------------------------

TaxIO takes forward and reverse primer sequences and Illumina paired-end reads as input.
It then rearranges the reference sequences and paired-end reads in an inside-out manner.
The inside-out reads are compared to the inside-out reference for taxonomy classification.
To run TaxIO on sample data, go to the test folder and issue the following commands.

# classify 16S PEs using usearch
> taxio.pl -l1 250 -l2 200 AGAGTTTGATCCTGGCTCAG ATTACCGCGGCTGCTGG read_R1.fq read_R2.fq

# classify 16S PEs using RDP classifier with four CPU cores
> taxio.pl -taxm rdp -cpu 4 -l1 250 -l2 200 AGAGTTTGATCCTGGCTCAG ATTACCGCGGCTGCTGG read_R1.fq read_R2.fq

# classify fungi 28S PEs using usearch and the RDP fungi LSU database
> taxio.pl -o rdpfungilsut11_fla1p1K -ref rdp_fungilsu_t11.fa -l1 146 -l2 126 AACACGGACCAAGGAGTC CAGGCATAGTTCACCATCTT fla1p_1K_R1.fq fla1p_1K_R2.fq

# TaxIO is designed to be modular. That is, each step can be run separately. 
# This is convenient when users like to classify additional data without reconstructing 
# inside-out reference. When running TaxIO by steps, remember to give consistent options
# as in the following example. The results of the following commands should be identical
# to the 
> PrepareInsideOutRead.pl -cpu 4 -o ioread.fa read_R1.fq read_R2.fq
> PrepareInsideOutReference.pl -cpu 4 -l1 250 -l2 200 -o ioref.fa AGAGTTTGATCCTGGCTCAG ATTACCGCGGCTGCTGG ../data/rdp_16S_t16.fa
> CreateReferenceDatabase.pl -taxm utax ioref.fa 
> ClassifyInsideOutRead.pl -cpu 4 -taxm utax ioref.fa ioread.fa

# TaxIO provides RDP training sequences in the data folder as reference.
# Users may download other maker gene sequences as reference from other databases, 
# e.g., SILVA (https://www.arb-silva.de/fileadmin/silva_databases/release_128/Exports/) 
# and Greengenes (ftp://greengenes.microbio.me/greengenes_release/gg_13_5/)
# Note that both sequences and taxonomy information should be obtained and reformatted 
# for input into TaxIO (see below). We provide the following scripts for formatting 
# the data from SILVA and Greengenes.

# sample command for SILVA data
# Note that SILVA provides RNA sequences, which need to be converted into DNA sequences.
> SilvaFixRankTaxonomy.pl SilvaFixRankTaxonomy.pl tax_slv_ssu_128.txt SILVA_128_SSURef_Nr99_tax_silva_trunc.fasta > silva128_ssu_nr99.fa

# sample command for Greengenes data
> GreengenesFixRankTaxonomy.pl 97_otu_taxonomy.txt 97_otus.fasta > gg_13_5_97otus.fa


3. Input and output
-------------------------------------------------------------------------------------------
TaxIO accepts Illumina paired-end data in either fastq or fasta format.
TaxIO generates inside-out reference and reads, and reports taxonomy 
classifications in an output folder. The files are described below.
-------------------------------------------------------------------------------------------

# Input format

Input paired-end reads should be oriented so that the forward reads are on 
the plus strand of the marker gene. By default, TaxIO assumes that primers 
are present in reads. If primer segments are removed from reads, the TaxIO 
option of primer cut (-pc 1) should be issued (see the following example).

> taxio.pl -l1 200 -l2 150 -pc 1 AGAGTTTGATCCTGGCTCAG ATTACCGCGGCTGCTGG npread_R1.fq npread_R2.fq

When using user-provided reference, the reference should be in fasta format with 
the ID line containing non-spaced sequence ID and the corresponding taxonomy in 
fixed rank (see above).

# Output files

Common
ioref.fa  : inside-out reference
ioread.fa : inside-out reads
repcr     : re-PCR results

For USEARCH
ioref.fa.udb            : usearch database of inside-out reference
ioref.fa.ioread.fa.ub6  : usearch alignments in BLAST 6 format
ioref.fa.ioread.fa.utax : taxonomy classifications using USEARCH in three
                        : columns: read ID, percent identity, and taxonomy.

For RDP Classifier
ioref.fa_trained        : trained RDP Classifier using inside-out reference
ioref.fa.ioread.fa.rdp  : taxonomy classifications using RDP classifier
